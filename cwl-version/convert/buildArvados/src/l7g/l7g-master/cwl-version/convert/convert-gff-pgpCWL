#!/bin/bash

set -a

DEBUG=0

function _q {
  echo $1
  exit 1
}


#ref="hg19"
#reffa="/data-sdd/cwl_tiling/convert/ref/$ref.fa.gz"
#afn="/data-sdd/cwl_tiling/convert/ref/assembly.00.hg19.fw.gz"
#aidx="/data-sdd/cwl_tiling/convert/ref/assembly.00.hg19.fw.fwi"
#tagdir="/data-sdd/cwl_tiling/convert/ref/tagset.fa.gz"
#export l7g="/data-sdd/cwl_tiling/l7g/l7g-master/tools/l7g"
#pasta="/data-sdd/tiling/pasta/pasta"
#export refstream="/home/sarah/imputation/fileconversionGFF/refstream"

gffInitial="$1"
if [ "$gffInitial" == "" ] ; then
  echo "provide gff file"
  exit 1
fi

trap "ERROR: $gffInitial $path ; exit" ERR


export ref="$2"
export reffa="$3"
export afn="$4"
export aidx="$5"
export tagdir="$6"
export l7g="$7"
export pasta="$8"
export refstream="$9"

mkdir -p 'cleaned'

ifnInitial=`basename $gffInitial`
echo "$ifnInitial"
stripped_nameInitial=`basename $ifnInitial .gff.gz`
echo "$stripped_nameInitial"
gff='cleaned/cleaned'$stripped_nameInitial'.gff'
echo "$gff"

zcat $gffInitial | head -n2 > $gff
zcat $gffInitial | egrep -v '^#' >> $gff
bgzip -i $gff
gff=$gff'.gz'
tabix $gff

ifn=`basename $gff`
stripped_name=`basename $ifn .gff.gz`
huid=`echo "$stripped_name" | cut -f1 -d'-'`
dnaid=`echo "$stripped_name" | cut -f2- -d'-'`

echo "individual variable listings"
echo "gff $gff"
echo "ref $ref"
echo "reffa $reffa"
echo "afn $afn"
echo "aidx $aidx"
echo "tagdir $tagdir"
echo "pasta $pasta"
echo "refstream $refstream"
echo "l7g $l7g"

for chrom in chr1 chr2 chr3 chr4 chr5 chr6 chr7 chr8 chr9 chr10 chr11 chr12 chr13 chr14 chr15 chr16 chr17 chr18 chr19 chr20 chr21 chr22 chrX chrY chrM ; do
#for chrom in  chrM ; do

  echo $huid $dnaid processing $chrom

  odir="stage/$huid-$dnaid"
  mkdir -p $odir

  # DEBUG
  #if [ "$chrom" != "chr9" ] ; then
  #  echo "DEBUG: skipping $chrom"
  #  continue
  #fi

  while read line
  do

    #echo "got here inside do"
    #echo "individual variable listings"
    #echo "gff $gff"
    #echo "ref $ref"
    #echo "reffa $reffa"
    #echo "afn $afn"
    #echo "aidx $aidx"
    #echo "tagdir $tagdir"
    #echo "pasta $pasta"
    #echo "refstream $refstream"
    #echo "l7g $l7g"

    path=`echo "$line" | cut -f1 | cut -f3 -d':'`

    #echo "path $path"
    
    byte_start=`echo "$line" | cut -f3`
    byte_len=`echo "$line" | cut -f2`

    #echo "byte_start $byte_start"
    #echo "bye_len $byte_len"

    export ref_start0=`$l7g assembly-range $afn $path | tail -n1 | cut -f2`
    export ref_end0=`$l7g assembly-range $afn $path | tail -n1 | cut -f3`

    #echo "ref_start0 $ref_start0"
    #echo "ref_end0 $ref_end0"

    export ref_start1=`expr "$ref_start0" + 1`
    export ref_end1=`expr "$ref_end0" + 1`

    #echo "ref_start1 $ref_start1"
    #echo "ref_end1 $ref_end1"


    ### VERBOSE
    if [ "$DEBUG" == 1 ] ; then
      echo "$ifn >>>>>> $odir/$path.fj ($chrom:$ref_start0-$ref_end0)"
      if [ "$ref_start0" != 121500000 ] ; then
        continue
      fi
    fi

    export realstart1=`tabix $gff $chrom:$ref_start1-$ref_end0 | head -n1 | cut -f4`
    export realend1=`tabix $gff $chrom:$ref_start1-$ref_end0 | tail -n1 | cut -f5`

    if [ "$realstart1" == "" ] ; then
      realstart1=$ref_start1
    fi

    if [ "$realend1" == "" ] ; then
      realend1=$ref_end0
    fi

    if [ "$DEBUG" == 1 ] ; then
      echo "cp0 ($realend1 $realstart1)"
      echo "tabix $gff $chrom:$ref_start1-$ref_end0 | tail -n1 | cut -f5"
    fi

    export realdn=`expr "$realend1" - "$realstart1"`
    export dn=`expr "$ref_end0" - "$ref_start0"`

    export window_start1="$realstart1"
    if [ "$realstart1" -ge "$ref_start1" ]
    then
      export realstart1="$ref_start1"
      export window_start1="$ref_start1"
    fi

    export window_start0=`expr "$window_start1" - 1` || true

    export window_end1="$realend1"
    if [ "$ref_end1" -ge "$realend1" ]
    then
      export realend1=$ref_end1
      export window_end1="$ref_end1"
    fi

    export window_end0=`expr "$window_end1" - 1` || true

      #-i <( tabix $gff $chrom:$window_start1-$window_end1 ) | \

    if [ "$DEBUG" == "1" ] ; then
      echo "$pasta -action gff-rotini -start $window_start0 \
        -refstream <( $refstream $reffa $chrom:$window_start1-$window_end1 ) \
        -i <( cat <( echo -e '\n\n\n' ) <( tabix $gff $chrom:$window_start1-$window_end1 ) ) | \
        $pasta -action filter-rotini -start $ref_start0 -n $dn > $odir/$path.pa"
      echo -e "\n\n\n\n"
    fi

    $pasta -action gff-rotini -start $window_start0 -chrom $chrom \
      -refstream <( $refstream $reffa $chrom:$window_start1-$window_end1 ) \
      -i <( cat <( echo -e '\n\n\n' ) <( tabix $gff $chrom:$window_start1-$window_end1 ) ) | \
      $pasta -action filter-rotini -start $ref_start0 -n $dn > $odir/$path.pa

    if [ "$DEBUG" == "1" ] ; then
      echo "refstream $reffa $chrom:$window_start1-$window_end1"
      echo "$pasta -action rotini-fastj -start $ref_start0 -tilepath $path -chrom $chrom -build $ref \
        -i $odir/$path.pa \
        -assembly <( l7g assembly $afn $path ) \
        -tag <( samtools faidx $tagdir $path.00 | egrep -v '^>' | tr -d '\n' | fold -w 24 ) > $odir/$path.fj "
      echo -e "\n\n\n"
    fi

    $pasta -action rotini-fastj -start $ref_start0 -tilepath $path -chrom $chrom -build $ref \
      -i $odir/$path.pa \
      -assembly <( $l7g assembly $afn $path ) \
      -tag <( samtools faidx $tagdir $path.00 | egrep -v '^>' | tr -d '\n' | fold -w 24 ) > $odir/$path.fj

    ## DEBUG
    #if [ "$DEBUG" == 1 ] ; then exit ; fi

    rm $odir/$path.pa
    bgzip -f $odir/$path.fj
    bgzip -r $odir/$path.fj.gz

  done < <( egrep '^'$ref':'$chrom':' $aidx )

  #if [ "$DEBUG" == 1 ] ; then exit ; fi

done # chrom
