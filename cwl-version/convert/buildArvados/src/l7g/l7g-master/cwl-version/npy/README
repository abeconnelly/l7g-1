cnvrt-hiq-npy-to-1hot.py
---

Converts tiled, interleaved vector representation to "simple" 1-hot representation,
skipping over spanning tiles.

example usage:

```
./cvrt-hiq-npy-to-1hot.py hiq/hiq-collect.npy hiq/hiq-1hot-simple.npy
```

This will create `hiq/hiq-1hot-simple.npy` and `hiq/hiq-1hot-simple-info.npy` numpy arrays.

cnvrt-hiq-npy-to-1hot-spanhot.py
---

Converts tiled, interleaved vector representation to 1-hot representation,
with special consideration for spanning tiles.  Note that this has only undergone
minimal verification so the resulting 1-hot representations might still have some
problems with them.


example usage:

```
./cvrt-hiq-npy-to-1hot-spanhot.py hiq/hiq-collect.npy hiq/hiq-1hot-spanhot.npy
```

This will create `hiq/hiq-1hot-spanhot.npy` and `hiq/hiq-1hot-spanhot-info.npy` numpy arrays.



Data
===

The high quality tiles were derived from the 'raw' tiled vectors, which can be found in
`data-sdd/work/10122/data/data-vec`.  Each tile path is split into it's own file, with
each original datasets portion of that tilepath residing therein.  Each file should
have 651 rows (one per original data file) cross the number of tile steps in that tile
path.

For example:

```python
>>> import numpy as np
>>> z = np.load('35e')
>>> z
array([[  4,   4,   1, ...,  13,  -2,  -2],
       [ 18,  18,   0, ...,  76,  -2,  -2],
       [ 18,  18,   0, ...,  76,  -2,  -2],
       ..., 
       [135, 135,  -1, ...,  -2,  -1,  -1],
       [158, 158,  -1, ...,  -2,  -1,  -1],
       [107, 107,   0, ...,  -2,  -1,  -1]], dtype=int32)
>>> z.shape
(651, 70)
```

Here, the value `-2` value indicates a "low quality tile", and the `-1` value
indicates a non-anchor spanning tile.
